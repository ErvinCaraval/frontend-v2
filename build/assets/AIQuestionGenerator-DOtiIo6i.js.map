{"version":3,"file":"AIQuestionGenerator-DOtiIo6i.js","sources":["../../src/components/ManualQuestionForm.jsx","../../src/components/AIQuestionGenerator.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useAuth } from '../AuthContext';\nimport './ManualQuestionForm.css';\n\nconst ManualQuestionForm = ({ topics, onQuestionCreated, onCancel }) => {\n  const { user } = useAuth();\n  const [question, setQuestion] = useState('');\n  const [options, setOptions] = useState(['', '', '', '']);\n  const [correctIndex, setCorrectIndex] = useState(0);\n  const [selectedTopic, setSelectedTopic] = useState(topics[0] || '');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const handleOptionChange = (idx, value) => {\n    const newOptions = [...options];\n    newOptions[idx] = value;\n    setOptions(newOptions);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n\n    // Validaciones\n    if (!question.trim() || options.some(opt => !opt.trim())) {\n      setError('Completa la pregunta y todas las opciones.');\n      return;\n    }\n\n    // Validar autenticación\n    if (!user || !user.getIdToken) {\n      setError('Debes iniciar sesión para crear preguntas.');\n      return;\n    }\n\n    setLoading(true);\n    try {\n  const apiBase = import.meta.env.VITE_API_URL || 'http://localhost:5000';\n\n      // Obtener token del usuario autenticado\n      let token = await user.getIdToken();\n\n      const payload = {\n        text: question,\n        options,\n        correctAnswerIndex: correctIndex,\n        category: selectedTopic,\n        explanation: ''\n      };\n\n      const res = await fetch(`${apiBase}/api/questions`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(payload)\n      });\n\n      const data = await res.json();\n\n      if (res.ok && data.success !== false) {\n        // ✅ Llamar al callback para notificar que la pregunta fue creada\n        onQuestionCreated && onQuestionCreated(\n          data.question || { question, options, correctAnswerIndex: correctIndex, category: selectedTopic }\n        );\n      } else {\n        setError(data.error || 'Error al guardar la pregunta');\n      }\n    } catch (err) {\n      setError('Error de conexión');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <form className=\"manual-question-form\" onSubmit={handleSubmit}>\n  <h3>Escribe tu pregunta</h3>\n      <label>\n        Tema:\n        <select value={selectedTopic} onChange={e => setSelectedTopic(e.target.value)}>\n          {topics.map(t => <option key={t} value={t}>{t}</option>)}\n        </select>\n      </label>\n      <label>\n        Pregunta:\n        <input\n          type=\"text\"\n          value={question}\n          onChange={e => setQuestion(e.target.value)}\n          required\n        />\n      </label>\n      <div>\n        Opciones:\n        <div className=\"manual-options-list\">\n          {options.map((opt, idx) => (\n            <div key={idx} className=\"manual-option-row\">\n              <input\n                type=\"text\"\n                value={opt}\n                onChange={e => handleOptionChange(idx, e.target.value)}\n                required\n                placeholder={`Opción ${idx + 1}`}\n              />\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"correctOption\"\n                  checked={correctIndex === idx}\n                  onChange={() => setCorrectIndex(idx)}\n                />\n                Correcta\n              </label>\n            </div>\n          ))}\n        </div>\n      </div>\n      {error && <div className=\"error-message\">{error}</div>}\n      <div className=\"manual-question-actions\">\n          <button type=\"button\" className=\"btn btn-secondary\" onClick={onCancel} disabled={loading} style={{ minWidth: 100, fontSize: '1.08rem', whiteSpace: 'nowrap' }}>\n            Atrás\n        </button>\n          <button type=\"submit\" className=\"btn btn-primary\" disabled={loading} style={{ minWidth: 140, fontSize: '1.08rem', whiteSpace: 'nowrap' }}>\n            {loading ? 'Guardando...' : 'Guardar'}\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default ManualQuestionForm;","import React, { useState, useEffect } from 'react';\nimport { useAuth } from '../AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport ManualQuestionForm from './ManualQuestionForm';\nimport './AIQuestionGenerator.css';\n\nconst AIQuestionGenerator = ({ onQuestionsGenerated, onClose }) => {\n  const { user } = useAuth();\n  const navigate = useNavigate();\n  const [topics, setTopics] = useState([]);\n  const [difficultyLevels, setDifficultyLevels] = useState([]);\n  const [selectedTopic, setSelectedTopic] = useState('');\n  const [selectedDifficulty, setSelectedDifficulty] = useState('medium');\n  const [questionCount, setQuestionCount] = useState(5);\n  const [useAI, setUseAI] = useState(false);\n  const [showManualForm, setShowManualForm] = useState(false);\n  const [manualCount, setManualCount] = useState(1);\n  const [manualStep, setManualStep] = useState(0);\n  const [manualQuestions, setManualQuestions] = useState([]);\n  const [manualTopic, setManualTopic] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [generatedQuestions, setGeneratedQuestions] = useState([]);\n  const [canCreateGame, setCanCreateGame] = useState(false);\n\n  useEffect(() => {\n    fetchTopics();\n    fetchDifficultyLevels();\n  }, []);\n\n  const fetchTopics = async () => {\n    try {\n      const apiBase = import.meta.env.VITE_API_URL || 'http://localhost:5000';\n      const response = await fetch(`${apiBase}/api/ai/topics`);\n      const text = await response.text();\n      let data;\n      try {\n        data = JSON.parse(text);\n      } catch (parseErr) {\n        setTopics([]);\n        setSelectedTopic('');\n        setError('Respuesta inválida del backend.');\n        console.error('Respuesta no es JSON:', text);\n        return;\n      }\n      if (data.success && Array.isArray(data.topics) && data.topics.length > 0) {\n        setTopics(data.topics);\n        setSelectedTopic(data.topics[0]);\n      } else {\n        setTopics([]);\n        setSelectedTopic('');\n        setError(`No hay temas disponibles. Respuesta: ${JSON.stringify(data)}`);\n        console.error('Respuesta inesperada:', data);\n      }\n    } catch (error) {\n      setTopics([]);\n      setSelectedTopic('');\n      setError('Error obteniendo temas. Detalle consola.');\n      console.error('Error fetching topics:', error);\n    }\n  };\n\n  const fetchDifficultyLevels = async () => {\n    try {\n  const apiBase = import.meta.env.VITE_API_URL || 'http://localhost:5000';\n      const response = await fetch(`${apiBase}/api/ai/difficulty-levels`);\n      const data = await response.json();\n      if (data.success) {\n        setDifficultyLevels(data.levels);\n      }\n    } catch (error) {\n      console.error('Error fetching difficulty levels:', error);\n    }\n  };\n\n  const generateQuestions = async () => {\n    if (!selectedTopic) {\n      setError('Por favor selecciona un tema válido');\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n\n    try {\n  const apiBase = import.meta.env.VITE_API_URL || 'http://localhost:5000';\n      const token = user && user.getIdToken ? await user.getIdToken() : null;\n      const response = await fetch(`${apiBase}/api/ai/generate-questions`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          ...(token ? { Authorization: `Bearer ${token}` } : {})\n        },\n        body: JSON.stringify({\n          topic: selectedTopic,\n          difficulty: selectedDifficulty,\n          count: questionCount,\n          useAI: useAI\n        }),\n      });\n\n      const data = await response.json();\n      console.log('Respuesta de /api/ai/generate-questions:', data);\n      if (data.success) {\n        // Guardar preguntas en Firestore y esperar confirmación exitosa antes de crear la partida\n        const questionsWithMeta = data.questions.map(q => ({\n          // Si las opciones existen, barajarlas y actualizar el índice de la respuesta correcta de forma robusta\n          ...(() => {\n            if (!Array.isArray(q.options) || typeof q.correctAnswerIndex !== 'number') return q;\n            // Asociar cada opción con su índice original\n            const optionsWithIndex = q.options.map((opt, idx) => ({ opt, origIdx: idx }));\n            // Barajar\n            for (let i = optionsWithIndex.length - 1; i > 0; i--) {\n              const j = Math.floor(Math.random() * (i + 1));\n              [optionsWithIndex[i], optionsWithIndex[j]] = [optionsWithIndex[j], optionsWithIndex[i]];\n            }\n            // Buscar la nueva posición de la opción que era la correcta\n            const newCorrectIndex = optionsWithIndex.findIndex(o => o.origIdx === q.correctAnswerIndex);\n            return {\n              ...q,\n              options: optionsWithIndex.map(o => o.opt),\n              correctAnswerIndex: newCorrectIndex\n            };\n          })(),\n          createdBy: user?.uid || 'anon',\n          createdAt: Date.now(),\n          category: selectedTopic,\n          difficulty: selectedDifficulty\n        }));\n        let saveOk = false;\n        try {\n          const bulkToken = user && user.getIdToken ? await user.getIdToken() : null;\n          const response = await fetch(`${apiBase}/api/questions/bulk`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              ...(bulkToken ? { Authorization: `Bearer ${bulkToken}` } : {})\n            },\n            body: JSON.stringify({ questions: questionsWithMeta })\n          });\n          const result = await response.json();\n          if (!result.success) {\n            setError((prev) => (prev ? prev + ' | ' : '') + (result.error || 'Error guardando preguntas en Firestore'));\n            console.error('Error guardando preguntas en Firestore:', result.error);\n          } else {\n            saveOk = true;\n          }\n        } catch (e) {\n          setError((prev) => (prev ? prev + ' | ' : '') + 'Error guardando preguntas en Firestore');\n          console.error('Error guardando preguntas en Firestore:', e);\n        }\n        if (!saveOk) {\n          setLoading(false);\n          return;\n        }\n        // Redirigir al usuario a la pantalla principal para que pueda crear la partida manualmente\n        onQuestionsGenerated(data.questions);\n        setLoading(false);\n        // No navegues ni cierres aquí, deja que el Dashboard controle el cierre\n      } else {\n        setError(data.error || 'Error generando preguntas');\n        console.error('Error generando preguntas:', data.error);\n      }\n    } catch (error) {\n      setError('Error de conexión. Intenta nuevamente.');\n      console.error('Error generating questions:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Reinicia el contador de preguntas al cerrar el generador para evitar confusión\n  useEffect(() => {\n    if (!loading && !error && generatedQuestions.length === 0) {\n      setQuestionCount(5);\n    }\n  }, [loading, error, generatedQuestions]);\n\n  return (\n    <div className=\"ai-generator-overlay\">\n      <div className=\"ai-generator-modal\">\n        <div className=\"ai-generator-header\">\n          <h2>🤖 Generador de Preguntas</h2>\n          <button className=\"close-btn\" onClick={onClose}>×</button>\n        </div>\n        {/* Selección de método de generación */}\n        {!showManualForm && !useAI && (\n          <div className=\"ai-generator-method-select\">\n            <button className=\"btn btn-primary\" onClick={() => setUseAI(true)} style={{ marginRight: 12, minWidth: 140, fontSize: '1.08rem', whiteSpace: 'nowrap' }}>\n              Crear con IA\n            </button>\n            <button className=\"btn btn-secondary\" onClick={() => setShowManualForm(true)} style={{ minWidth: 140, fontSize: '1.08rem', whiteSpace: 'nowrap' }}>\n              Escribir preguntas\n            </button>\n          </div>\n        )}\n        {/* Formulario de generación con IA */}\n        {useAI && !showManualForm && (\n          <form className=\"ai-generator-form\" onSubmit={async (e) => {\n            e.preventDefault();\n            setLoading(true);\n            setError('');\n            try {\n              await generateQuestions();\n              setError('');\n            } catch (err) {\n              setError('Error al generar preguntas. Por favor, inténtalo de nuevo.');\n            } finally {\n              setLoading(false);\n            }\n          }}>\n            <div className=\"form-group\">\n              <label htmlFor=\"topic\">Tema</label>\n              <select\n                id=\"topic\"\n                className=\"form-select\"\n                value={selectedTopic}\n                onChange={(e) => setSelectedTopic(e.target.value)}\n                disabled={topics.length === 0}\n              >\n                {topics.length === 0 ? (\n                  <option value=\"\">No hay temas disponibles</option>\n                ) : (\n                  topics.map(topic => (\n                    <option key={topic} value={topic}>{topic}</option>\n                  ))\n                )}\n              </select>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"difficulty\">Dificultad</label>\n              <select\n                id=\"difficulty\"\n                className=\"form-select\"\n                value={selectedDifficulty}\n                onChange={(e) => setSelectedDifficulty(e.target.value)}\n              >\n                <option value=\"easy\">Fácil</option>\n                <option value=\"medium\">Media</option>\n                <option value=\"hard\">Difícil</option>\n              </select>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"numQuestions\">Cantidad de Preguntas</label>\n              <input\n                id=\"numQuestions\"\n                className=\"form-input\"\n                type=\"number\"\n                min={1}\n                max={20}\n                value={questionCount}\n                onChange={(e) => setQuestionCount(Number(e.target.value))}\n                required\n              />\n            </div>\n            {error && <div className=\"error-message\">{error}</div>}\n            <div className=\"ai-generator-actions\">\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary\"\n                disabled={loading}\n                style={{ minWidth: 140, fontSize: '1.08rem', whiteSpace: 'nowrap' }}\n              >\n                {loading ? 'Creando...' : 'Crear preguntas'}\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                onClick={() => setUseAI(false)}\n                disabled={loading}\n                style={{ marginLeft: 8, minWidth: 100, fontSize: '1.08rem', whiteSpace: 'nowrap' }}\n              >\n                Atrás\n              </button>\n            </div>\n          </form>\n        )}\n        {/* Formulario manual */}\n        {showManualForm && (\n          <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', minHeight: 380, padding: '32px 0 12px 0', animation: 'fadeIn .5s' }}>\n            {manualStep === 0 ? (\n              <form\n                className=\"manual-question-form\"\n                style={{ maxWidth: 420, margin: '0 auto', marginBottom: 24, boxShadow: '0 8px 32px rgba(42,122,228,0.13)', background: 'rgba(26,26,46,0.97)', borderRadius: 24, padding: '36px 32px 28px 32px', border: '2.5px solid var(--bb-primary)', backdropFilter: 'blur(14px) saturate(1.2)' }}\n                onSubmit={e => { e.preventDefault(); setManualStep(1); setManualQuestions([]); setManualTopic(selectedTopic); }}\n              >\n                <h3 style={{ textAlign: 'center', marginBottom: 24, fontWeight: 900, fontSize: '1.35rem', letterSpacing: 1.2, color: 'var(--bb-primary)', background: 'var(--bb-gradient-primary)', WebkitBackgroundClip: 'text', WebkitTextFillColor: 'transparent', backgroundClip: 'text' }}>\n                  ¿Cuántas preguntas quieres agregar manualmente?\n                </h3>\n                <div style={{ display: 'flex', flexDirection: 'column', gap: 22 }}>\n                  <label style={{ fontSize: '1.08rem', fontWeight: 600 }}>\n                    Tema:\n                    <select\n                      value={selectedTopic}\n                      onChange={e => setSelectedTopic(e.target.value)}\n                      style={{ marginLeft: 8, minWidth: 120, padding: '10px 16px', borderRadius: 10, fontSize: '1.08rem', border: '2px solid var(--bb-primary-light)', background: 'rgba(22,33,62,0.7)', color: 'var(--bb-text-primary)' }}\n                    >\n                      {topics.map(t => <option key={t} value={t}>{t}</option>)}\n                    </select>\n                  </label>\n                  <label style={{ fontSize: '1.08rem', fontWeight: 600 }}>\n                    ¿Cuántas preguntas?\n                    <input\n                      type=\"number\"\n                      min={1}\n                      max={50}\n                      value={manualCount}\n                      onChange={e => setManualCount(Number(e.target.value))}\n                      style={{ marginLeft: 8, width: 90, padding: '10px 16px', borderRadius: 10, fontSize: '1.08rem', border: '2px solid var(--bb-primary-light)', background: 'rgba(22,33,62,0.7)', color: 'var(--bb-text-primary)' }}\n                      required\n                    />\n                  </label>\n                  <div style={{ display: 'flex', justifyContent: 'center', gap: 18, marginTop: 10 }}>\n                    <button type=\"submit\" className=\"btn btn-primary\" style={{ minWidth: 120, fontSize: '1.08rem' }}>Empezar</button>\n                    <button type=\"button\" className=\"btn btn-secondary\" style={{ minWidth: 120, fontSize: '1.08rem' }} onClick={() => setShowManualForm(false)}>Volver</button>\n                  </div>\n                </div>\n              </form>\n            ) : (\n              <div style={{ width: '100%', maxWidth: 650, margin: '0 auto', background: 'rgba(26,26,46,0.97)', borderRadius: 28, boxShadow: '0 8px 32px rgba(42,122,228,0.13)', border: '2.5px solid var(--bb-primary)', padding: '36px 32px 28px 32px', backdropFilter: 'blur(14px) saturate(1.2)', animation: 'fadeIn .5s' }}>\n                <div style={{ textAlign: 'center', marginBottom: 18, fontWeight: 900, fontSize: '1.25rem', letterSpacing: 1.1, color: 'var(--bb-primary)', background: 'var(--bb-gradient-primary)', WebkitBackgroundClip: 'text', WebkitTextFillColor: 'transparent', backgroundClip: 'text' }}>\n                  ¡Vamos! Pregunta {manualQuestions.length + 1} de {manualCount}\n                </div>\n                <ManualQuestionForm\n                  topics={[manualTopic]}\n                  onQuestionCreated={q => {\n                    const next = manualQuestions.concat([{ ...q, category: manualTopic }]);\n                    if (next.length < manualCount) {\n                      setManualQuestions(next);\n                      setManualStep(manualStep + 1);\n                    } else {\n                      // Guardar todas las preguntas en lote\n                      const apiBase = import.meta.env.VITE_API_URL || 'http://localhost:5000';\n                      user.getIdToken().then(token => {\n                        fetch(`${apiBase}/api/questions/bulk`, {\n                          method: 'POST',\n                          headers: {\n                            'Content-Type': 'application/json',\n                            Authorization: `Bearer ${token}`\n                          },\n                          body: JSON.stringify({ questions: next })\n                        })\n                          .then(res => res.json())\n                          .then(data => {\n                            setShowManualForm(false);\n                            setError('');\n                            setGeneratedQuestions(gqs => [...gqs, ...next]);\n                            onQuestionsGenerated && onQuestionsGenerated(next);\n                          })\n                          .catch(() => {\n                            setError('Error guardando preguntas en Firestore');\n                            setShowManualForm(false);\n                          });\n                      });\n                    }\n                  }}\n                  onCancel={() => setShowManualForm(false)}\n                />\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default AIQuestionGenerator;"],"names":["ManualQuestionForm","topics","onQuestionCreated","onCancel","user","useAuth","question","setQuestion","useState","options","setOptions","correctIndex","setCorrectIndex","selectedTopic","setSelectedTopic","error","setError","loading","setLoading","handleOptionChange","idx","value","newOptions","handleSubmit","e","opt","apiBase","token","payload","res","data","jsx","t","jsxs","AIQuestionGenerator","onQuestionsGenerated","onClose","useNavigate","setTopics","difficultyLevels","setDifficultyLevels","selectedDifficulty","setSelectedDifficulty","questionCount","setQuestionCount","useAI","setUseAI","showManualForm","setShowManualForm","manualCount","setManualCount","manualStep","setManualStep","manualQuestions","setManualQuestions","manualTopic","setManualTopic","generatedQuestions","setGeneratedQuestions","canCreateGame","setCanCreateGame","useEffect","fetchTopics","fetchDifficultyLevels","text","generateQuestions","questionsWithMeta","q","optionsWithIndex","j","newCorrectIndex","o","saveOk","bulkToken","result","prev","topic","next","gqs"],"mappings":"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"}